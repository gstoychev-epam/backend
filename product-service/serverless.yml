service: product-service
frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs18.x
  region: eu-central-1
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - "arn:aws:dynamodb:eu-central-1:411280288885:table/stocks"
        - "arn:aws:dynamodb:eu-central-1:411280288885:table/products"
    - Effect: "Allow"
      Action:
        - sqs:*
      Resource:
        - "arn:aws:sqs:eu-central-1:411280288885:catalogItemsQueue"
    - Effect: "Allow"
      Action:
        - sns:*
      Resource:
        Ref: catalogBatchProcessTopic

plugins:
  - serverless-auto-swagger

functions:
  getProductsList:
    handler: getProductsList.getProductsList
    events:
      - http:
          path: /product
          method: get
          cors: true
  getProductsById:
    handler: getProductsById.getProductsById
    events:
      - http:
          path: /product/{productId}
          method: get
          request: { parameters: { paths: { productId: true } } }
          cors: true
  createProduct:
    handler: createProduct.createProduct
    events:
      - http:
          path: /product
          method: post
          cors: true
  catalogBatchProcess:
    handler: catalogBatchProcess.catalogBatchProcess
    events:
      - sqs:
          batchSize: 5
          arn: "arn:aws:sqs:eu-central-1:411280288885:catalogItemsQueue"

resources:
  Resources:
    catalogItemsQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: catalogItemsQueue
    catalogBatchProcessTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: createProductTopic
    catalogBatchProcessSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        Endpoint: georgi_stoychev@epam.com
        Protocol: email
        TopicArn:
          Ref: catalogBatchProcessTopic
